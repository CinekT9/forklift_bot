<?xml version="1.0" ?>
<sdf version="1.8" xmlns:xacro="http://ros.org/wiki/xacro">
  <model name='forklift_bot' canonical_link='base_link'>

 <!-- Define robot constants -->
    <xacro:property name="base_width" value="0.6"/>
    <xacro:property name="base_length" value="0.6"/>
    <xacro:property name="base_height" value="0.3"/>

    <xacro:property name="wheel_radius" value="0.20"/>
    <xacro:property name="wheel_width" value="0.05"/>
    <xacro:property name="wheel_ygap" value="0.025"/>
    <xacro:property name="wheel_zoff" value="0.05"/>
    <xacro:property name="wheel_xoff" value="0"/>
    <xacro:property name="caster_radius" value="0.07"/>

 <!-- Define some commonly used inertial properties  -->
    <xacro:macro name="box_inertia" params="m w h d">
      <inertial>
        <pose>0 0 0 ${pi/2} 0 ${pi/2}</pose>
        <mass>${m}</mass>
        <inertia>
          <ixx>${(m/12) * (h*h + d*d)}</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>${(m/12) * (w*w + d*d)}</iyy>
          <iyz>0.0</iyz>
          <izz>${(m/12) * (w*w + h*h)}</izz>
        </inertia>
      </inertial>
    </xacro:macro>

    <xacro:macro name="cylinder_inertia" params="m r h">
      <inertial>
        <pose>0 0 0 ${pi/2} 0 0</pose>
        <mass>${m}</mass>
        <inertia>
          <ixx>${(m/12) * (3*r*r + h*h)}</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>${(m/12) * (3*r*r + h*h)}</iyy>
          <iyz>0.0</iyz>
          <izz>${(m/2) * (r*r)}</izz>
        </inertia>
      </inertial>
    </xacro:macro>

    <xacro:macro name="sphere_inertia" params="m r">
      <inertial>
        <mass>${m}</mass>
        <inertia>
          <ixx>${(2/5) * m * (r*r)}</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>${(2/5) * m * (r*r)}</iyy>
          <iyz>0.0</iyz>
          <izz>${(2/5) * m * (r*r)}</izz>
        </inertia>
      </inertial>
    </xacro:macro>

 <!-- Robot Base -->
    <link name='base_link'>
      <must_be_base_link>true</must_be_base_link>
      <visual name="base_link_visual">
        <geometry>
          <box><size>
            ${base_length} ${base_width} ${base_height}
          </size></box>
        </geometry>
        <material>
          <ambient>0 1 1 1</ambient>
          <diffuse>0 1 1 1</diffuse>
        </material>
      </visual>

      <collision name="base_link_collision">
        <geometry>
          <box><size>
            ${base_length} ${base_width} ${base_height}
          </size></box>
        </geometry>
      </collision>
    </link>

 <!-- Robot Footprint -->
    <link name='base_footprint'>
      <pose relative_to="base_joint"/>
      <xacro:box_inertia m="15" w="${base_width}" d="${base_length}" h="${base_height}"/>
    </link>

    <joint name='base_joint' type='fixed'>
      <parent>base_link</parent>
      <child>base_footprint</child>
      <pose relative_to="base_link">0.0 0.0 ${-(wheel_radius+wheel_zoff)} 0 0 0</pose>
    </joint>

 <!-- Forklift parts -->
    <!-- chassis to forklift plate -->
        <link name='plate_link'>
            <pose relative_to="plate_joint"/>
        <visual name="plate_link_visual">
            <pose relative_to="plate_link"/>
            <geometry>
            <box><size>
                0.015 ${base_width} 0.2
            </size></box>
            </geometry>
            <material>
            <ambient>0 1 1 1</ambient>
            <diffuse>0 1 1 1</diffuse>
            </material>
        </visual>
        <xacro:box_inertia m="10" w="${base_width}" d="0.015" h="0.2"/>
        <collision name="plate_link_collision">
            <pose relative_to="plate_link"></pose>
            <geometry>
            <box><size>
                0.015 ${base_width} 0.2
            </size></box>
            </geometry>
        </collision>
        </link>

        <joint name="plate_joint" type="fixed">
            <parent>base_link</parent>
            <child>plate_link</child>
            <pose relative_to="base_link">${base_length/2 + 0.0075} 0 0 0 0 0</pose>
        </joint>
    <!-- support fork connector -->
        <link name='connector_link'>
            <pose relative_to="connector_joint"/>
        <visual name="connector_link_visual">
            <pose relative_to="connector_link"/>
            <geometry>
            <box><size>
                0.1 ${base_width} 0.01
            </size></box>
            </geometry>
            <material>
            <ambient>0 1 1 1</ambient>
            <diffuse>0 1 1 1</diffuse>
            </material>
        </visual>
        <xacro:box_inertia m="5" w="${base_width}" d="0.1" h="0.01"/>

        <collision name="connector_link_collision">
            <pose relative_to="connector_link"></pose>
            <geometry>
            <box><size>
                0.1 ${base_width} 0.01
            </size></box>
            </geometry>
        </collision>
        </link>

        <joint name="connector_joint" type="fixed">
            <parent>plate_link</parent>
            <child>connector_link</child>
            <pose relative_to="plate_link">0.0575 0 -0.095 0 0 0</pose>
        </joint>

    <!-- Left support fork -->
        <link name='forkl_link'>
            <pose relative_to="forkl_joint"/>
        <visual name="forkl_link_visual">
            <pose relative_to="forkl_link"/>
            <geometry>
            <box><size>
                1.085 0.1 0.01
            </size></box>
            </geometry>
            <material>
            <ambient>0 1 1 1</ambient>
            <diffuse>0 1 1 1</diffuse>
            </material>
        </visual>
        <xacro:box_inertia m="8" w="0.1" d="1.085" h="0.01"/>

        <collision name="forkl_link_collision">
            <pose relative_to="forkl_link"></pose>
            <geometry>
            <box><size>
                1.085 0.1 0.01
            </size></box>
            </geometry>
        </collision>
        </link>

        <joint name="forkl_joint" type="fixed">
            <parent>connector_link</parent>
            <child>forkl_link</child>
            <pose relative_to="connector_link">0.5925 -0.25 0 0 0 0</pose>
        </joint>


    <!-- Right support fork -->

            <link name='forkr_link'>
            <pose relative_to="forkr_joint"/>
        <visual name="forkr_link_visual">
            <pose relative_to="forkr_link"/>
            <geometry>
            <box><size>
                1.085 0.1 0.01
            </size></box>
            </geometry>
            <material>
            <ambient>0 1 1 1</ambient>
            <diffuse>0 1 1 1</diffuse>
            </material>
        </visual>
        <xacro:box_inertia m="8" w="0.1" d="1.085" h="0.01"/>
        <collision name="forkr_link_collision">
            <pose relative_to="forkr_link"></pose>
            <geometry>
            <box><size>
                1.085 0.1 0.01
            </size></box>
            </geometry>
        </collision>
        </link>

        <joint name="forkr_joint" type="fixed">
            <parent>connector_link</parent>
            <child>forkr_link</child>
            <pose relative_to="connector_link">0.5925 0.25 0 0 0 0</pose>
        </joint>

    <!-- Left pillar -->
        <link name='pillarl_link'>
            <pose relative_to="pillarl_joint"/>
        <visual name="pillarl_link_visual">
            <pose relative_to="pillarl_link"/>
            <geometry>
            <box><size>
                0.015 0.03 1.8
            </size></box>
            </geometry>
            <material>
            <ambient>0 1 1 1</ambient>
            <diffuse>0 1 1 1</diffuse>
            </material>
        </visual>
        <xacro:box_inertia m="6" w="0.03" d="0.015" h="1.8"/>
        <collision name="pillarl_link_collision">
            <pose relative_to="pillarl_link"></pose>
            <geometry>
            <box><size>
                0.015 0.03 1.8
            </size></box>
            </geometry>
        </collision>
        </link>

        <joint name="pillarl_joint" type="fixed">
            <parent>connector_link</parent>
            <child>pillarl_link</child>
            <pose relative_to="connector_link">-0.035 -0.25 0.895 0 0 0</pose>
        </joint>
    <!-- Right pillar -->
           <link name='pillarr_link'>
            <pose relative_to="pillarr_joint"/>
        <visual name="pillarr_link_visual">
            <pose relative_to="pillarr_link"/>
            <geometry>
            <box><size>
                0.015 0.03 1.8
            </size></box>
            </geometry>
            <material>
            <ambient>0 1 1 1</ambient>
            <diffuse>0 1 1 1</diffuse>
            </material>
        </visual>
        <xacro:box_inertia m="6" w="0.03" d="0.015" h="1.8"/>
        <collision name="pillarr_link_collision">
            <pose relative_to="pillarr_link"></pose>
            <geometry>
            <box><size>
                0.015 0.03 1.8
            </size></box>
            </geometry>
        </collision>
        </link>

        <joint name="pillarr_joint" type="fixed">
            <parent>connector_link</parent>
            <child>pillarr_link</child>
            <pose relative_to="connector_link">-0.035 0.25 0.895 0 0 0</pose>
        </joint>

    <!--  left lift fork connector -->
        <link name='liftlconnector_link'>
            <pose relative_to="liftlconnector_joint"/>
        <visual name="liftlconnector_link_visual">
            <pose relative_to="liftlconnector_link"/>
            <geometry>
            <box><size>
                0.01 0.1 0.2
            </size></box>
            </geometry>
            <material>
            <ambient>0 1 1 1</ambient>
            <diffuse>0 1 1 1</diffuse>
            </material>
        </visual>
        <xacro:box_inertia m="1.5" w="0.1" d="0.01" h="0.2"/>
        <collision name="liftlconnector_link_collision">
            <pose relative_to="liftlconnector_link"></pose>
            <geometry>
            <box><size>
                0.01 0.1 0.2
            </size></box>
            </geometry>
        </collision>
        </link>
        <joint name="liftlconnector_joint" type="prismatic">
            <parent>pillarl_link</parent>
            <child>liftlconnector_link</child>
            <pose relative_to="pillarl_link">0.0125 0 0.8 0 0 0</pose>
            <axis>
            <xyz>0 0 1</xyz>
            <limit>
                <lower>-0.8</lower>
                <upper>0</upper>
                <effort>1.6e</effort>
            </limit>
            </axis>
        </joint>
         
        <!--<transmission type="ros_control/SimpleTransmission">
         <actuator name="liftlconnector_joint_motor">
          <hardwareInterface>EffortJointInterface</hardwareInterface>
          <mechanicalReduction>1</mechanicalReduction>
         </actuator>
         <joint name="liftlconnector_joint">
          <hardwareInterface>EffortJointInterface</hardwareInterface>
         </joint>
        </transmission> -->
    <!--  right lift fork connector -->
        <link name='liftrconnector_link'>
            <pose relative_to="liftrconnector_joint"/>
        <visual name="liftrconnector_link_visual">
            <pose relative_to="liftrconnector_link"/>
            <geometry>
            <box><size>
                0.01 0.1 0.2
            </size></box>
            </geometry>
            <material>
            <ambient>0 1 1 1</ambient>
            <diffuse>0 1 1 1</diffuse>
            </material>
        </visual>
        <xacro:box_inertia m="1.5" w="0.1" d="0.01" h="0.2"/>
        <collision name="liftrconnector_link_collision">
            <pose relative_to="liftrconnector_link"></pose>
            <geometry>
            <box><size>
                0.01 0.1 0.2
            </size></box>
            </geometry>
        </collision>
        </link>

        <joint name="liftrconnector_joint" type="prismatic">
            <parent>pillarr_link</parent>
            <child>liftrconnector_link</child>
            <pose relative_to="pillarr_link">0.0125 0 0.8 0 0 0</pose>
            <axis>
            <xyz>0 0 1</xyz>
            <limit>
                <lower>-0.8</lower>
                <upper>0</upper>
                <effort>1.6e</effort>
            </limit>
            </axis>
        </joint>

       <!--<transmission type="ros_control/SimpleTransmission">
         <actuator name="liftrconnector_joint_motor">
          <hardwareInterface>EffortJointInterface</hardwareInterface>
          <mechanicalReduction>1</mechanicalReduction>
         </actuator>
         <joint name="liftrconnector_joint">
          <hardwareInterface>EffortJointInterface</hardwareInterface>
         </joint>
        </transmission>-->

    <!-- Left fork -->
        <link name='liftl_link'>
            <pose relative_to="liftl_joint"/>
        <visual name="liftl_link_visual">
            <pose relative_to="liftl_link"/>
            <geometry>
            <box><size>
                1.2 0.1 0.01
            </size></box>
            </geometry>
            <material>
            <ambient>0 1 1 1</ambient>
            <diffuse>0 1 1 1</diffuse>
            </material>
        </visual>
        <xacro:box_inertia m="9" w="0.1" d="1.2" h="0.01"/>
        <collision name="liftl_link_collision">
            <pose relative_to="liftl_link"></pose>
            <geometry>
            <box><size>
                1.2 0.1 0.01
            </size></box>
            </geometry>
        </collision>
        </link>

        <joint name="liftl_joint" type="fixed">
            <parent>liftlconnector_link</parent>
            <child>liftl_link</child>
            <pose relative_to="liftlconnector_link">0.605 0 -0.1 0 0 0</pose>
        </joint>


    <!-- Right fork -->

              <link name='liftr_link'>
            <pose relative_to="liftr_joint"/>
        <visual name="liftr_link_visual">
            <pose relative_to="liftr_link"/>
            <geometry>
            <box><size>
                1.2 0.1 0.01
            </size></box>
            </geometry>
            <material>
            <ambient>0 1 1 1</ambient>
            <diffuse>0 1 1 1</diffuse>
            </material>
        </visual>
        <xacro:box_inertia m="9" w="0.1" d="1.2" h="0.01"/>
        <collision name="liftr_link_collision">
            <pose relative_to="liftr_link"></pose>
            <geometry>
            <box><size>
                1.2 0.1 0.01
            </size></box>
            </geometry>
        </collision>
        </link>

        <joint name="liftr_joint" type="fixed">
            <parent>liftrconnector_link</parent>
            <child>liftr_link</child>
            <pose relative_to="liftrconnector_link">0.605 0 -0.1 0 0 0</pose>
        </joint>

    <!-- cylinder -->
      <link name="cylinder_link">
        <pose relative_to="cylinder_joint"/>

        <visual name="cylinder_link_visual">
          <pose relative_to="cylinder_link">0 0 0 ${pi/2} 0 0</pose>
          <geometry>
            <cylinder>
              <radius>0.01</radius>
              <length>0.4</length>
            </cylinder>
          </geometry>
          <material>
            <ambient>0 1 1 1</ambient>
            <diffuse>0 1 1 1</diffuse>
            </material>
        </visual>

        <collision name="cylinder_link_collision">
          <pose relative_to="cylinder_link">0 0 0 ${pi/2} 0 0</pose>
          <geometry>
            <cylinder>
              <radius>0.01</radius>
              <length>0.4</length>
            </cylinder>
          </geometry>
        </collision>

        <xacro:cylinder_inertia m="0.9" r="0.01" h="0.4"/>
      </link>

      <joint name="cylinder_joint" type="fixed">
        <parent>liftrconnector_link</parent>
        <child>cylinder_link</child>
        <pose relative_to="liftrconnector_link">0 -0.25 0.05 0 0 0</pose>
      </joint>

    <!-- Wheels -->
    <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
      <link name="${prefix}_link">
        <pose relative_to="${prefix}_joint"/>

        <visual name="${prefix}_link_visual">
          <pose relative_to="${prefix}_link">0 0 0 ${pi/2} 0 0</pose>
          <geometry>
            <cylinder>
              <radius>${wheel_radius}</radius>
              <length>${wheel_width}</length>
            </cylinder>
          </geometry>
          <material>
            <ambient>0.3 0.3 0.3 1.0</ambient>
            <diffuse>0.7 0.7 0.7 1.0</diffuse>
          </material>
        </visual>

        <collision name="${prefix}_link_collision">
          <pose relative_to="${prefix}_link">0 0 0 ${pi/2} 0 0</pose>
          <geometry>
            <cylinder>
              <radius>${wheel_radius}</radius>
              <length>${wheel_width}</length>
            </cylinder>
          </geometry>
        </collision>

        <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}"/>
      </link>

      <joint name="${prefix}_joint" type="revolute">
        <parent>base_link</parent>
        <child>${prefix}_link</child>
        <pose relative_to="base_link">${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff} 0 0 0</pose>
        <axis>
          <xyz>0 1 0</xyz>
          <limit>
            <lower>-inf</lower>
            <upper>inf</upper>
          </limit>
        </axis>
      </joint>
    </xacro:macro>

    <xacro:wheel prefix="drivewhl_l" x_reflect="-1" y_reflect="1" />
    <xacro:wheel prefix="drivewhl_r" x_reflect="-1" y_reflect="-1" />
    <!-- Front caster wheels -->
        <link name="frontr_caster">
        <pose relative_to="casterr_joint"/>

        <visual name="frontr_caster_visual">
            <geometry>
            <sphere>
                <radius>${caster_radius}</radius>
            </sphere>
            </geometry>
            <material>
            <ambient>0 1 1 1</ambient>
            <diffuse>0 1 1 1</diffuse>
            </material>
        </visual>

        <collision name="frontr_caster_collision">
            <geometry>
            <sphere>
                <radius>${caster_radius}</radius>
            </sphere>
            </geometry>
        </collision>

        <xacro:sphere_inertia m="0.1" r="${caster_radius}"/>
        </link>

        <link name="placeholderr_link">
        <pose relative_to="casterr_joint"/>
        </link>

        <joint name="placeholderr_joint" type="revolute">
        <parent>forkr_link</parent>
        <child>placeholderr_link</child>
        <pose relative_to="forkr_link">0.5 0 -${caster_radius} 0 0 0</pose>
        <axis>
          <xyz>0 1 0</xyz>
          <limit>
            <lower>-inf</lower>
            <upper>inf</upper>
          </limit>
        </axis>
        </joint>

        <joint name="casterr_joint" type="revolute">
        <parent>placeholderr_link</parent>
        <child>frontr_caster</child>
        <pose relative_to="forkr_link">0.5 0 -${caster_radius} 0 0 0</pose>
        <axis>
          <xyz>1 0 0</xyz>
          <limit>
            <lower>-inf</lower>
            <upper>inf</upper>
          </limit>
        </axis>
        </joint>

        <link name="frontl_caster">
        <pose relative_to="casterl_joint"/>

        <visual name="frontl_caster_visual">
            <geometry>
            <sphere>
                <radius>${caster_radius}</radius>
            </sphere>
            </geometry>
            <material>
            <ambient>0 1 1 1</ambient>
            <diffuse>0 1 1 1</diffuse>
            </material>
        </visual>

        <collision name="frontl_caster_collision">
            <geometry>
            <sphere>
                <radius>${caster_radius}</radius>
            </sphere>
            </geometry>
        </collision>

        <xacro:sphere_inertia m="0.1" r="${caster_radius}"/>
        </link>

        <link name="placeholderl_link">
        <pose relative_to="casterl_joint"/>
        </link>

        <joint name="placeholderl_joint" type="revolute">
        <parent>forkl_link</parent>
        <child>placeholderl_link</child>
        <pose relative_to="forkl_link">0.5 0 -${caster_radius} 0 0 0</pose>
        <axis>
          <xyz>0 1 0</xyz>
          <limit>
            <lower>-inf</lower>
            <upper>inf</upper>
          </limit>
        </axis>
        </joint>

        <joint name="casterl_joint" type="revolute">
        <parent>placeholderl_link</parent>
        <child>frontl_caster</child>
        <pose relative_to="forkl_link">0.5 0 -${caster_radius} 0 0 0</pose>
        <axis>
          <xyz>1 0 0</xyz>
          <limit>
            <lower>-inf</lower>
            <upper>inf</upper>
          </limit>
        </axis>
        </joint>
        

    <!-- Sensors -->
      <joint name='imu_joint' type='fixed'>
      <parent>base_link</parent>
      <child>imu_link</child>
      <pose relative_to="base_link">0.0 0.0 0.01 0 0 0</pose>
      </joint>

      <link name='imu_link'>
      <pose relative_to="imu_joint"/>
      <visual name="imu_link_visual">
          <geometry>
          <box><size>
              0.1 0.1 0.1
          </size></box>
          </geometry>
      </visual>

      <collision name="imu_link_collision">
          <geometry>
          <box><size>
              0.1 0.1 0.1
          </size></box>
          </geometry>
      </collision>

      <xacro:box_inertia m="0.1" w="0.1" d="0.1" h="0.1"/>

      <sensor name="imu_sensor" type="imu">
          <always_on>true</always_on>
          <update_rate>100</update_rate>
          <visualize>true</visualize>
          <topic>demo/imu</topic>
          <gz_frame_id>imu_link</gz_frame_id>
          <imu>
          <angular_velocity>
              <x>
              <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>2e-4</stddev>
                  <bias_mean>0.0000075</bias_mean>
                  <bias_stddev>0.0000008</bias_stddev>
              </noise>
              </x>
              <y>
              <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>2e-4</stddev>
                  <bias_mean>0.0000075</bias_mean>
                  <bias_stddev>0.0000008</bias_stddev>
              </noise>
              </y>
              <z>
              <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>2e-4</stddev>
                  <bias_mean>0.0000075</bias_mean>
                  <bias_stddev>0.0000008</bias_stddev>
              </noise>
              </z>
          </angular_velocity>
          <linear_acceleration>
              <x>
              <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>1.7e-2</stddev>
                  <bias_mean>0.1</bias_mean>
                  <bias_stddev>0.001</bias_stddev>
              </noise>
              </x>
              <y>
              <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>1.7e-2</stddev>
                  <bias_mean>0.1</bias_mean>
                  <bias_stddev>0.001</bias_stddev>
              </noise>
              </y>
              <z>
              <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>1.7e-2</stddev>
                  <bias_mean>0.1</bias_mean>
                  <bias_stddev>0.001</bias_stddev>
              </noise>
              </z>
          </linear_acceleration>
          </imu>
      </sensor>
      </link>
    <!-- Plugins -->
      <!--Wheel plugings-->
        <plugin filename="gz-sim-diff-drive-system" name="gz::sim::systems::DiffDrive">
        <!-- wheels -->
        <left_joint>drivewhl_l_joint</left_joint>
        <right_joint>drivewhl_r_joint</right_joint>

        <!-- kinematics -->
        <wheel_separation>0.4</wheel_separation>
        <wheel_radius>${wheel_radius}</wheel_radius>

        <!-- limits -->
        <max_linear_acceleration>0.1</max_linear_acceleration>

        <!-- input -->
        <topic>/demo/cmd_vel</topic>

        <!-- output -->
        <odom_topic>/demo/odom</odom_topic>
        <tf_topic>/tf</tf_topic>

        <!-- <frame_id>odom</frame_id>
        <child_frame_id>base_link</child_frame_id>-->
        </plugin>
      <!--fork plugins-->
      <!--<plugin filename="libgz_ros2_control-system.so" name="gz_ros2_control::GazeboSimROS2ControlPlugin">
       <parameters>/config/lift_controller.yaml</parameters>
      </plugin>-->
      
      <plugin
        filename="gz-sim-joint-state-publisher-system"
        name="gz::sim::systems::JointStatePublisher">
        <topic>joint_states</topic>
      </plugin>

  </model>
</sdf>